name: End-to-End Tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
    - cron: "0 12 * * 5"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    env:
      USER: ${{ secrets.USER }}
      PASS: ${{ secrets.PASS }}
      TR: ${{ secrets.TR }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run end-to-end tests
        run: npm test

      - name: Send Telegram notification on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const botToken = process.env.TELEGRAM_BOT_TOKEN;
            const chatId = process.env.TELEGRAM_CHAT_ID;
            const message = `The workflow ${context.workflow} in the repository ${context.repo.owner}/${context.repo.repo} has failed.`;
            const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(message)}`;
            fetch(telegramUrl)
              .then(response => response.json())
              .then(data => {
                if (data.ok) {
                  console.log('Message sent');
                } else {
                  console.error('Error sending message:', data);
                }
              })
              .catch(error => {
                console.error('Fetch error:', error);
              });
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
